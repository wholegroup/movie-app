import { useEffect } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import SyncBackendService from '../../libs/SyncBackendService.js'
import MovieIndex from '../components/MovieIndex'
import MovieIndexLoader from '../components/MovieIndexLoader.js'

// noinspection JSUnusedGlobalSymbols
export default function Home () {
  const router = useRouter()

  useEffect(() => {
    // we have to trigger router with current url because
    // index page is returned by Service Worker for any url
    // to support SPA we need to run routing on client side.
    if (router.asPath !== '/') {
      console.log('re-triggering router...')
      router.replace(router.asPath)
        .catch(console.error)
    }
  }, [router])

  return (
    <>
      <Head>
        <meta name='description' content='Generated by create next app' />
      </Head>
      <MovieIndexLoader />
      <MovieIndex />
    </>
  )
}

Home.getInitialProps = async function ({ req }) {
  const isClient = !req

  if (isClient) {
    return {
      ts: Date.now()
    }
  }

  const syncService = new SyncBackendService(process.env.MOVIE_APP_DB)
  try {
    await syncService.open()

    const movies = await syncService.moviesSince(0)
    const sortedMovies = movies.sort(({ year: a, title: x }, { year: b, title: y }) => (b - a) || x.localeCompare(y))
    const images = await syncService.imagesSince(0)

    const cards = sortedMovies.map(movie => {
      const mainImage = (images.find(nextImages => nextImages.movieId === movie.movieId) || {}).images[0] ?? null
      return {
        movieId: movie.movieId,
        slug: movie.slug,
        title: movie.title,
        year: movie.year,
        posterHash: mainImage?.hash || null
      }
    })

    return {
      commonStore: {
        cards
      },
      ts: Date.now()
    }
  } finally {
    if (syncService.isOpen()) {
      await syncService.close()
    }
  }
}
